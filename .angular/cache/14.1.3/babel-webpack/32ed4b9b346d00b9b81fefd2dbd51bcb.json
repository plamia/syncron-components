{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = void 0;\n\nconst NgComponentAnalyzer_1 = require(\"./utils/NgComponentAnalyzer\");\n\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n  const inputs = ngComponentInputsOutputs.inputs.filter(i => i.templateName in props).map(i => i.templateName);\n  const outputs = ngComponentInputsOutputs.outputs.filter(o => o.templateName in props).map(o => o.templateName);\n  return {\n    inputs,\n    outputs,\n    otherProps: Object.keys(props).filter(k => ![...inputs, ...outputs].includes(k))\n  };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\n\n\nexports.computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n  const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n  const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n  }\n\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(i => `[${i}]=\"${i}\"`).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${i}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\n\nconst createAngularInputProperty = ({\n  propertyName,\n  value,\n  argType\n}) => {\n  const {\n    name: type = null,\n    summary = null\n  } = (argType === null || argType === void 0 ? void 0 : argType.type) || {};\n  let templateValue = type === 'enum' && !!summary ? `${summary}.${value}` : value;\n  const actualType = type === 'enum' && summary ? 'enum' : typeof value;\n  const requiresBrackets = ['object', 'any', 'boolean', 'enum', 'number'].includes(actualType);\n\n  if (typeof value === 'object') {\n    templateValue = propertyName;\n  }\n\n  return `${requiresBrackets ? '[' : ''}${propertyName}${requiresBrackets ? ']' : ''}=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\n\n\nexports.computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n  const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n\n  if (!ngComponentMetadata) {\n    return null;\n  }\n\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n  }\n\n  const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(propertyName => createAngularInputProperty({\n    propertyName,\n    value: initialProps[propertyName],\n    argType: argTypes === null || argTypes === void 0 ? void 0 : argTypes[propertyName]\n  })).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${i}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\n\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n  // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n  const voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  const firstSelector = selector.split(',')[0];\n  const templateReplacers = [[/(^.*?)(?=[,])/, '$1'], [/(^\\..+)/, 'div$1'], [/(^\\[.+?])/, 'div$1'], [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`], [/#([\\w-]+)/, ` id=\"$1\"`], [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split`.`.join` `.trim()}\"`], [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`], [/([\\S]+)(.*)/, (template, elementSelector) => {\n    return voidElements.some(element => elementSelector === element) ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`) : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n  }]];\n  return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","computesTemplateSourceFromComponent","computesTemplateFromComponent","NgComponentAnalyzer_1","require","separateInputsOutputsAttributes","ngComponentInputsOutputs","props","inputs","filter","i","templateName","map","outputs","o","otherProps","keys","k","includes","component","initialProps","innerTemplate","ngComponentMetadata","getComponentDecoratorMetadata","getComponentInputsOutputs","selector","initialInputs","initialOutputs","templateInputs","length","join","templateOutputs","buildTemplate","createAngularInputProperty","propertyName","argType","name","type","summary","templateValue","actualType","requiresBrackets","argTypes","voidElements","firstSelector","split","templateReplacers","_","c","trim","a","slice","template","elementSelector","some","element","replace","reduce","prevSelector","searchValue","replacer"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/angular/dist/ts3.9/client/preview/angular-beta/ComputesTemplateFromComponent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = void 0;\nconst NgComponentAnalyzer_1 = require(\"./utils/NgComponentAnalyzer\");\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n    const inputs = ngComponentInputsOutputs.inputs\n        .filter((i) => i.templateName in props)\n        .map((i) => i.templateName);\n    const outputs = ngComponentInputsOutputs.outputs\n        .filter((o) => o.templateName in props)\n        .map((o) => o.templateName);\n    return {\n        inputs,\n        outputs,\n        otherProps: Object.keys(props).filter((k) => ![...inputs, ...outputs].includes(k)),\n    };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexports.computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n    const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n    const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n    }\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map((i) => `[${i}]=\"${i}\"`).join(' ')}` : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${i}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\nconst createAngularInputProperty = ({ propertyName, value, argType, }) => {\n    const { name: type = null, summary = null } = (argType === null || argType === void 0 ? void 0 : argType.type) || {};\n    let templateValue = type === 'enum' && !!summary ? `${summary}.${value}` : value;\n    const actualType = type === 'enum' && summary ? 'enum' : typeof value;\n    const requiresBrackets = ['object', 'any', 'boolean', 'enum', 'number'].includes(actualType);\n    if (typeof value === 'object') {\n        templateValue = propertyName;\n    }\n    return `${requiresBrackets ? '[' : ''}${propertyName}${requiresBrackets ? ']' : ''}=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexports.computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n    const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n    if (!ngComponentMetadata) {\n        return null;\n    }\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n    }\n    const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0\n        ? ` ${initialInputs\n            .map((propertyName) => createAngularInputProperty({\n            propertyName,\n            value: initialProps[propertyName],\n            argType: argTypes === null || argTypes === void 0 ? void 0 : argTypes[propertyName],\n        }))\n            .join(' ')}`\n        : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${i}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n    // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n    const voidElements = [\n        'area',\n        'base',\n        'br',\n        'col',\n        'command',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n    ];\n    const firstSelector = selector.split(',')[0];\n    const templateReplacers = [\n        [/(^.*?)(?=[,])/, '$1'],\n        [/(^\\..+)/, 'div$1'],\n        [/(^\\[.+?])/, 'div$1'],\n        [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`],\n        [/#([\\w-]+)/, ` id=\"$1\"`],\n        [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split `.`.join ` `.trim()}\"`],\n        [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`],\n        [\n            /([\\S]+)(.*)/,\n            (template, elementSelector) => {\n                return voidElements.some((element) => elementSelector === element)\n                    ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`)\n                    : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n            },\n        ],\n    ];\n    return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mCAAR,GAA8CF,OAAO,CAACG,6BAAR,GAAwC,KAAK,CAA3F;;AACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,6BAAD,CAArC;;AACA,MAAMC,+BAA+B,GAAG,CAACC,wBAAD,EAA2BC,KAAK,GAAG,EAAnC,KAA0C;EAC9E,MAAMC,MAAM,GAAGF,wBAAwB,CAACE,MAAzB,CACVC,MADU,CACFC,CAAD,IAAOA,CAAC,CAACC,YAAF,IAAkBJ,KADtB,EAEVK,GAFU,CAELF,CAAD,IAAOA,CAAC,CAACC,YAFH,CAAf;EAGA,MAAME,OAAO,GAAGP,wBAAwB,CAACO,OAAzB,CACXJ,MADW,CACHK,CAAD,IAAOA,CAAC,CAACH,YAAF,IAAkBJ,KADrB,EAEXK,GAFW,CAENE,CAAD,IAAOA,CAAC,CAACH,YAFF,CAAhB;EAGA,OAAO;IACHH,MADG;IAEHK,OAFG;IAGHE,UAAU,EAAElB,MAAM,CAACmB,IAAP,CAAYT,KAAZ,EAAmBE,MAAnB,CAA2BQ,CAAD,IAAO,CAAC,CAAC,GAAGT,MAAJ,EAAY,GAAGK,OAAf,EAAwBK,QAAxB,CAAiCD,CAAjC,CAAlC;EAHT,CAAP;AAKH,CAZD;AAaA;AACA;AACA;AACA;AACA;AACA;;;AACAlB,OAAO,CAACG,6BAAR,GAAwC,CAACiB,SAAD,EAAYC,YAAZ,EAA0BC,aAAa,GAAG,EAA1C,KAAiD;EACrF,MAAMC,mBAAmB,GAAGnB,qBAAqB,CAACoB,6BAAtB,CAAoDJ,SAApD,CAA5B;EACA,MAAMb,wBAAwB,GAAGH,qBAAqB,CAACqB,yBAAtB,CAAgDL,SAAhD,CAAjC;;EACA,IAAI,CAACG,mBAAmB,CAACG,QAAzB,EAAmC;IAC/B;IACA,OAAQ,mEAAR;EACH;;EACD,MAAM;IAAEjB,MAAM,EAAEkB,aAAV;IAAyBb,OAAO,EAAEc;EAAlC,IAAqDtB,+BAA+B,CAACC,wBAAD,EAA2Bc,YAA3B,CAA1F;EACA,MAAMQ,cAAc,GAAGF,aAAa,CAACG,MAAd,GAAuB,CAAvB,GAA4B,IAAGH,aAAa,CAACd,GAAd,CAAmBF,CAAD,IAAQ,IAAGA,CAAE,MAAKA,CAAE,GAAtC,EAA0CoB,IAA1C,CAA+C,GAA/C,CAAoD,EAAnF,GAAuF,EAA9G;EACA,MAAMC,eAAe,GAAGJ,cAAc,CAACE,MAAf,GAAwB,CAAxB,GACjB,IAAGF,cAAc,CAACf,GAAf,CAAoBF,CAAD,IAAQ,IAAGA,CAAE,MAAKA,CAAE,WAAvC,EAAmDoB,IAAnD,CAAwD,GAAxD,CAA6D,EAD/C,GAElB,EAFN;EAGA,OAAOE,aAAa,CAACV,mBAAmB,CAACG,QAArB,EAA+BJ,aAA/B,EAA8CO,cAA9C,EAA8DG,eAA9D,CAApB;AACH,CAbD;;AAcA,MAAME,0BAA0B,GAAG,CAAC;EAAEC,YAAF;EAAgBlC,KAAhB;EAAuBmC;AAAvB,CAAD,KAAuC;EACtE,MAAM;IAAEC,IAAI,EAAEC,IAAI,GAAG,IAAf;IAAqBC,OAAO,GAAG;EAA/B,IAAwC,CAACH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACE,IAA3D,KAAoE,EAAlH;EACA,IAAIE,aAAa,GAAGF,IAAI,KAAK,MAAT,IAAmB,CAAC,CAACC,OAArB,GAAgC,GAAEA,OAAQ,IAAGtC,KAAM,EAAnD,GAAuDA,KAA3E;EACA,MAAMwC,UAAU,GAAGH,IAAI,KAAK,MAAT,IAAmBC,OAAnB,GAA6B,MAA7B,GAAsC,OAAOtC,KAAhE;EACA,MAAMyC,gBAAgB,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,SAAlB,EAA6B,MAA7B,EAAqC,QAArC,EAA+CvB,QAA/C,CAAwDsB,UAAxD,CAAzB;;EACA,IAAI,OAAOxC,KAAP,KAAiB,QAArB,EAA+B;IAC3BuC,aAAa,GAAGL,YAAhB;EACH;;EACD,OAAQ,GAAEO,gBAAgB,GAAG,GAAH,GAAS,EAAG,GAAEP,YAAa,GAAEO,gBAAgB,GAAG,GAAH,GAAS,EAAG,KAAIF,aAAc,GAArG;AACH,CATD;AAUA;AACA;AACA;AACA;AACA;AACA;;;AACAxC,OAAO,CAACE,mCAAR,GAA8C,CAACkB,SAAD,EAAYC,YAAZ,EAA0BsB,QAA1B,KAAuC;EACjF,MAAMpB,mBAAmB,GAAGnB,qBAAqB,CAACoB,6BAAtB,CAAoDJ,SAApD,CAA5B;;EACA,IAAI,CAACG,mBAAL,EAA0B;IACtB,OAAO,IAAP;EACH;;EACD,IAAI,CAACA,mBAAmB,CAACG,QAAzB,EAAmC;IAC/B;IACA,OAAQ,qCAAoCN,SAAS,CAACiB,IAAK,mBAA3D;EACH;;EACD,MAAM9B,wBAAwB,GAAGH,qBAAqB,CAACqB,yBAAtB,CAAgDL,SAAhD,CAAjC;EACA,MAAM;IAAEX,MAAM,EAAEkB,aAAV;IAAyBb,OAAO,EAAEc;EAAlC,IAAqDtB,+BAA+B,CAACC,wBAAD,EAA2Bc,YAA3B,CAA1F;EACA,MAAMQ,cAAc,GAAGF,aAAa,CAACG,MAAd,GAAuB,CAAvB,GAChB,IAAGH,aAAa,CACdd,GADC,CACIsB,YAAD,IAAkBD,0BAA0B,CAAC;IAClDC,YADkD;IAElDlC,KAAK,EAAEoB,YAAY,CAACc,YAAD,CAF+B;IAGlDC,OAAO,EAAEO,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACR,YAAD;EAHnB,CAAD,CAD/C,EAMDJ,IANC,CAMI,GANJ,CAMS,EAPI,GAQjB,EARN;EASA,MAAMC,eAAe,GAAGJ,cAAc,CAACE,MAAf,GAAwB,CAAxB,GACjB,IAAGF,cAAc,CAACf,GAAf,CAAoBF,CAAD,IAAQ,IAAGA,CAAE,MAAKA,CAAE,WAAvC,EAAmDoB,IAAnD,CAAwD,GAAxD,CAA6D,EAD/C,GAElB,EAFN;EAGA,OAAOE,aAAa,CAACV,mBAAmB,CAACG,QAArB,EAA+B,EAA/B,EAAmCG,cAAnC,EAAmDG,eAAnD,CAApB;AACH,CAxBD;;AAyBA,MAAMC,aAAa,GAAG,CAACP,QAAD,EAAWJ,aAAX,EAA0Bb,MAA1B,EAAkCK,OAAlC,KAA8C;EAChE;EACA,MAAM8B,YAAY,GAAG,CACjB,MADiB,EAEjB,MAFiB,EAGjB,IAHiB,EAIjB,KAJiB,EAKjB,SALiB,EAMjB,OANiB,EAOjB,IAPiB,EAQjB,KARiB,EASjB,OATiB,EAUjB,QAViB,EAWjB,MAXiB,EAYjB,MAZiB,EAajB,OAbiB,EAcjB,QAdiB,EAejB,OAfiB,EAgBjB,KAhBiB,CAArB;EAkBA,MAAMC,aAAa,GAAGnB,QAAQ,CAACoB,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAtB;EACA,MAAMC,iBAAiB,GAAG,CACtB,CAAC,eAAD,EAAkB,IAAlB,CADsB,EAEtB,CAAC,SAAD,EAAY,OAAZ,CAFsB,EAGtB,CAAC,WAAD,EAAc,OAAd,CAHsB,EAItB,CAAC,+BAAD,EAAmC,IAAnC,CAJsB,EAKtB,CAAC,WAAD,EAAe,UAAf,CALsB,EAMtB,CAAC,eAAD,EAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAW,WAAUA,CAAC,CAACH,KAAO,GAAT,CAAYf,IAAM,GAAlB,CAAqBmB,IAArB,EAA4B,GAAnE,CANsB,EAOtB,CAAC,WAAD,EAAc,CAACF,CAAD,EAAIG,CAAJ,KAAW,IAAGA,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAW,CAAC,CAAZ,CAAe,EAA3C,CAPsB,EAQtB,CACI,aADJ,EAEI,CAACC,QAAD,EAAWC,eAAX,KAA+B;IAC3B,OAAOV,YAAY,CAACW,IAAb,CAAmBC,OAAD,IAAaF,eAAe,KAAKE,OAAnD,IACDH,QAAQ,CAACI,OAAT,CAAiB,aAAjB,EAAiC,QAAOhD,MAAO,GAAEK,OAAQ,KAAzD,CADC,GAEDuC,QAAQ,CAACI,OAAT,CAAiB,aAAjB,EAAiC,QAAOhD,MAAO,GAAEK,OAAQ,IAAGQ,aAAc,OAA1E,CAFN;EAGH,CANL,CARsB,CAA1B;EAiBA,OAAOyB,iBAAiB,CAACW,MAAlB,CAAyB,CAACC,YAAD,EAAe,CAACC,WAAD,EAAcC,QAAd,CAAf,KAA2CF,YAAY,CAACF,OAAb,CAAqBG,WAArB,EAAkCC,QAAlC,CAApE,EAAiHhB,aAAjH,CAAP;AACH,CAvCD"},"metadata":{},"sourceType":"script"}