{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.map.js\";\n/* eslint-disable no-case-declarations */\n\nvar convertSig = function convertSig(type) {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      var values = {};\n      type.signature.properties.forEach(function (prop) {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(\"Unknown: \".concat(type));\n  }\n};\n\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name: name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n    case 'intersection':\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};","map":{"version":3,"names":["convertSig","type","name","values","signature","properties","forEach","prop","key","convert","value","Error","concat","raw","base","Object","assign","elements","map"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/convert.js"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.map.js\";\n\n/* eslint-disable no-case-declarations */\nvar convertSig = function convertSig(type) {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      var values = {};\n      type.signature.properties.forEach(function (prop) {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(\"Unknown: \".concat(type));\n  }\n};\n\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name: name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n    case 'intersection':\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};"],"mappings":"AAAA,OAAO,wCAAP;AACA,OAAO,iDAAP;AACA,OAAO,qCAAP;AACA,OAAO,qCAAP;AACA,OAAO,iCAAP;AAEA;;AACA,IAAIA,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0B;EACzC,QAAQA,IAAI,CAACA,IAAb;IACE,KAAK,UAAL;MACE,OAAO;QACLC,IAAI,EAAE;MADD,CAAP;;IAIF,KAAK,QAAL;MACE,IAAIC,MAAM,GAAG,EAAb;MACAF,IAAI,CAACG,SAAL,CAAeC,UAAf,CAA0BC,OAA1B,CAAkC,UAAUC,IAAV,EAAgB;QAChDJ,MAAM,CAACI,IAAI,CAACC,GAAN,CAAN,GAAmBC,OAAO,CAACF,IAAI,CAACG,KAAN,CAA1B;MACD,CAFD;MAGA,OAAO;QACLR,IAAI,EAAE,QADD;QAELQ,KAAK,EAAEP;MAFF,CAAP;;IAKF;MACE,MAAM,IAAIQ,KAAJ,CAAU,YAAYC,MAAZ,CAAmBX,IAAnB,CAAV,CAAN;EAjBJ;AAmBD,CApBD;;AAsBA,OAAO,IAAIQ,OAAO,GAAG,SAASA,OAAT,CAAiBR,IAAjB,EAAuB;EAC1C,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;EAAA,IACIW,GAAG,GAAGZ,IAAI,CAACY,GADf;EAEA,IAAIC,IAAI,GAAG,EAAX;EACA,IAAI,OAAOD,GAAP,KAAe,WAAnB,EAAgCC,IAAI,CAACD,GAAL,GAAWA,GAAX;;EAEhC,QAAQZ,IAAI,CAACC,IAAb;IACE,KAAK,QAAL;IACA,KAAK,QAAL;IACA,KAAK,QAAL;IACA,KAAK,SAAL;MACE;QACE,OAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;UAC7BZ,IAAI,EAAEA;QADuB,CAAxB,CAAP;MAGD;;IAEH,KAAK,OAAL;MACE;QACE,OAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;UAC7BZ,IAAI,EAAE,OADuB;UAE7BQ,KAAK,EAAET,IAAI,CAACgB,QAAL,CAAcC,GAAd,CAAkBT,OAAlB;QAFsB,CAAxB,CAAP;MAID;;IAEH,KAAK,WAAL;MACE,OAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwBd,UAAU,CAACC,IAAD,CAAlC,CAAP;;IAEF,KAAK,OAAL;IACA,KAAK,cAAL;MACE,OAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;QAC7BZ,IAAI,EAAEA,IADuB;QAE7BQ,KAAK,EAAET,IAAI,CAACgB,QAAL,CAAcC,GAAd,CAAkBT,OAAlB;MAFsB,CAAxB,CAAP;;IAKF;MACE,OAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;QAC7BZ,IAAI,EAAE,OADuB;QAE7BQ,KAAK,EAAER;MAFsB,CAAxB,CAAP;EA9BJ;AAmCD,CAzCM"},"metadata":{},"sourceType":"module"}