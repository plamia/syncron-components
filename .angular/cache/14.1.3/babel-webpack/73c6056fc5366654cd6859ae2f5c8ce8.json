{"ast":null,"code":"import { convert as tsConvert } from './typescript';\nimport { convert as flowConvert } from './flow';\nimport { convert as propTypesConvert } from './proptypes';\nexport var convert = function convert(docgenInfo) {\n  var type = docgenInfo.type,\n      tsType = docgenInfo.tsType,\n      flowType = docgenInfo.flowType;\n  if (type != null) return propTypesConvert(type);\n  if (tsType != null) return tsConvert(tsType);\n  if (flowType != null) return flowConvert(flowType);\n  return null;\n};","map":{"version":3,"names":["convert","tsConvert","flowConvert","propTypesConvert","docgenInfo","type","tsType","flowType"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/index.js"],"sourcesContent":["import { convert as tsConvert } from './typescript';\nimport { convert as flowConvert } from './flow';\nimport { convert as propTypesConvert } from './proptypes';\nexport var convert = function convert(docgenInfo) {\n  var type = docgenInfo.type,\n      tsType = docgenInfo.tsType,\n      flowType = docgenInfo.flowType;\n  if (type != null) return propTypesConvert(type);\n  if (tsType != null) return tsConvert(tsType);\n  if (flowType != null) return flowConvert(flowType);\n  return null;\n};"],"mappings":"AAAA,SAASA,OAAO,IAAIC,SAApB,QAAqC,cAArC;AACA,SAASD,OAAO,IAAIE,WAApB,QAAuC,QAAvC;AACA,SAASF,OAAO,IAAIG,gBAApB,QAA4C,aAA5C;AACA,OAAO,IAAIH,OAAO,GAAG,SAASA,OAAT,CAAiBI,UAAjB,EAA6B;EAChD,IAAIC,IAAI,GAAGD,UAAU,CAACC,IAAtB;EAAA,IACIC,MAAM,GAAGF,UAAU,CAACE,MADxB;EAAA,IAEIC,QAAQ,GAAGH,UAAU,CAACG,QAF1B;EAGA,IAAIF,IAAI,IAAI,IAAZ,EAAkB,OAAOF,gBAAgB,CAACE,IAAD,CAAvB;EAClB,IAAIC,MAAM,IAAI,IAAd,EAAoB,OAAOL,SAAS,CAACK,MAAD,CAAhB;EACpB,IAAIC,QAAQ,IAAI,IAAhB,EAAsB,OAAOL,WAAW,CAACK,QAAD,CAAlB;EACtB,OAAO,IAAP;AACD,CARM"},"metadata":{},"sourceType":"module"}