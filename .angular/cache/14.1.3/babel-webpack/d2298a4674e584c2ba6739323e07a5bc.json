{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\n\nvar _templateObject;\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport mapValues from 'lodash/mapValues';\nimport dedent from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\nimport { combineParameters } from './parameters';\n\nvar inferType = function inferType(value, name, visited) {\n  var type = _typeof(value);\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'function':\n    case 'symbol':\n      return {\n        name: type\n      };\n\n    default:\n      break;\n  }\n\n  if (value) {\n    if (visited.has(value)) {\n      logger.warn(dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        We've detected a cycle in arg '\", \"'. Args should be JSON-serializable.\\n\\n        Consider using the mapping feature or fully custom args:\\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\\n      \"])), name));\n      return {\n        name: 'other',\n        value: 'cyclic object'\n      };\n    }\n\n    visited.add(value);\n\n    if (Array.isArray(value)) {\n      var childType = value.length > 0 ? inferType(value[0], name, new Set(visited)) : {\n        name: 'other',\n        value: 'unknown'\n      };\n      return {\n        name: 'array',\n        value: childType\n      };\n    }\n\n    var fieldTypes = mapValues(value, function (field) {\n      return inferType(field, name, new Set(visited));\n    });\n    return {\n      name: 'object',\n      value: fieldTypes\n    };\n  }\n\n  return {\n    name: 'object',\n    value: {}\n  };\n};\n\nexport var inferArgTypes = function inferArgTypes(context) {\n  var id = context.id,\n      _context$argTypes = context.argTypes,\n      userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes,\n      _context$initialArgs = context.initialArgs,\n      initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;\n  var argTypes = mapValues(initialArgs, function (arg, key) {\n    return {\n      name: key,\n      type: inferType(arg, \"\".concat(id, \".\").concat(key), new Set())\n    };\n  });\n  var userArgTypesNames = mapValues(userArgTypes, function (argType, key) {\n    return {\n      name: key\n    };\n  });\n  return combineParameters(argTypes, userArgTypesNames, userArgTypes);\n};\ninferArgTypes.secondPass = true;","map":{"version":3,"names":["_templateObject","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_typeof","obj","Symbol","iterator","constructor","prototype","mapValues","dedent","logger","combineParameters","inferType","name","visited","type","has","warn","add","Array","isArray","childType","length","Set","fieldTypes","field","inferArgTypes","context","id","_context$argTypes","argTypes","userArgTypes","_context$initialArgs","initialArgs","arg","key","concat","userArgTypesNames","argType","secondPass"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/store/dist/esm/inferArgTypes.js"],"sourcesContent":["import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\n\nvar _templateObject;\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport mapValues from 'lodash/mapValues';\nimport dedent from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\nimport { combineParameters } from './parameters';\n\nvar inferType = function inferType(value, name, visited) {\n  var type = _typeof(value);\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'function':\n    case 'symbol':\n      return {\n        name: type\n      };\n\n    default:\n      break;\n  }\n\n  if (value) {\n    if (visited.has(value)) {\n      logger.warn(dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        We've detected a cycle in arg '\", \"'. Args should be JSON-serializable.\\n\\n        Consider using the mapping feature or fully custom args:\\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\\n      \"])), name));\n      return {\n        name: 'other',\n        value: 'cyclic object'\n      };\n    }\n\n    visited.add(value);\n\n    if (Array.isArray(value)) {\n      var childType = value.length > 0 ? inferType(value[0], name, new Set(visited)) : {\n        name: 'other',\n        value: 'unknown'\n      };\n      return {\n        name: 'array',\n        value: childType\n      };\n    }\n\n    var fieldTypes = mapValues(value, function (field) {\n      return inferType(field, name, new Set(visited));\n    });\n    return {\n      name: 'object',\n      value: fieldTypes\n    };\n  }\n\n  return {\n    name: 'object',\n    value: {}\n  };\n};\n\nexport var inferArgTypes = function inferArgTypes(context) {\n  var id = context.id,\n      _context$argTypes = context.argTypes,\n      userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes,\n      _context$initialArgs = context.initialArgs,\n      initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;\n  var argTypes = mapValues(initialArgs, function (arg, key) {\n    return {\n      name: key,\n      type: inferType(arg, \"\".concat(id, \".\").concat(key), new Set())\n    };\n  });\n  var userArgTypesNames = mapValues(userArgTypes, function (argType, key) {\n    return {\n      name: key\n    };\n  });\n  return combineParameters(argTypes, userArgTypesNames, userArgTypes);\n};\ninferArgTypes.secondPass = true;"],"mappings":"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"},"metadata":{},"sourceType":"module"}