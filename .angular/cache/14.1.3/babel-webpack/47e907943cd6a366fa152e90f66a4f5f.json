{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n  return operate(function (source, subscriber) {\n    var windows = [];\n\n    var handleError = function (err) {\n      while (0 < windows.length) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(new OperatorSubscriber(subscriber, function (openValue) {\n      var window = new Subject();\n      windows.push(window);\n      var closingSubscription = new Subscription();\n\n      var closeWindow = function () {\n        arrRemove(windows, window);\n        window.complete();\n        closingSubscription.unsubscribe();\n      };\n\n      var closingNotifier;\n\n      try {\n        closingNotifier = innerFrom(closingSelector(openValue));\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      subscriber.next(window.asObservable());\n      closingSubscription.add(closingNotifier.subscribe(new OperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n    }, noop));\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var windowsCopy = windows.slice();\n\n      try {\n        for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n          var window_1 = windowsCopy_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (0 < windows.length) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, handleError, function () {\n      while (0 < windows.length) {\n        windows.shift().unsubscribe();\n      }\n    }));\n  });\n} //# sourceMappingURL=windowToggle.js.map","map":{"version":3,"names":["__values","Subject","Subscription","operate","innerFrom","OperatorSubscriber","noop","arrRemove","windowToggle","openings","closingSelector","source","subscriber","windows","handleError","err","length","shift","error","subscribe","openValue","window","push","closingSubscription","closeWindow","complete","unsubscribe","closingNotifier","next","asObservable","add","value","e_1","_a","windowsCopy","slice","windowsCopy_1","windowsCopy_1_1","done","window_1","e_1_1","return","call"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/rxjs/dist/esm5/internal/operators/windowToggle.js"],"sourcesContent":["import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n    return operate(function (source, subscriber) {\n        var windows = [];\n        var handleError = function (err) {\n            while (0 < windows.length) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        };\n        innerFrom(openings).subscribe(new OperatorSubscriber(subscriber, function (openValue) {\n            var window = new Subject();\n            windows.push(window);\n            var closingSubscription = new Subscription();\n            var closeWindow = function () {\n                arrRemove(windows, window);\n                window.complete();\n                closingSubscription.unsubscribe();\n            };\n            var closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector(openValue));\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            subscriber.next(window.asObservable());\n            closingSubscription.add(closingNotifier.subscribe(new OperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        }, noop));\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var windowsCopy = windows.slice();\n            try {\n                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n                    var window_1 = windowsCopy_1_1.value;\n                    window_1.next(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (0 < windows.length) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, handleError, function () {\n            while (0 < windows.length) {\n                windows.shift().unsubscribe();\n            }\n        }));\n    });\n}\n//# sourceMappingURL=windowToggle.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}