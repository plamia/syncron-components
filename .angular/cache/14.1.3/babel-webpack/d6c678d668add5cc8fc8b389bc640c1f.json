{"ast":null,"code":"/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2020 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n// vim: ts=4 sts=4 sw=4 expandtab\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n; // eslint-disable-line no-extra-semi\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n\n(function (root, factory) {\n  'use strict';\n  /* global define */\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory(); // eslint-disable-line no-param-reassign\n  }\n})(this, function () {\n  var call = Function.call;\n  var prototypeOfObject = Object.prototype;\n  var owns = call.bind(prototypeOfObject.hasOwnProperty);\n  var isEnumerable = call.bind(prototypeOfObject.propertyIsEnumerable);\n  var toStr = call.bind(prototypeOfObject.toString); // If JS engine supports accessors creating shortcuts.\n\n  var defineGetter;\n  var defineSetter;\n  var lookupGetter;\n  var lookupSetter;\n  var supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n\n  if (supportsAccessors) {\n    /* eslint-disable no-underscore-dangle, no-restricted-properties */\n    defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n    defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n    lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n    lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n    /* eslint-enable no-underscore-dangle, no-restricted-properties */\n  }\n\n  var isPrimitive = function isPrimitive(o) {\n    return o == null || typeof o !== 'object' && typeof o !== 'function';\n  }; // ES5 15.2.3.2\n  // https://es5.github.io/#x15.2.3.2\n\n\n  if (!Object.getPrototypeOf) {\n    // https://github.com/es-shims/es5-shim/issues#issue/2\n    // https://johnresig.com/blog/objectgetprototypeof/\n    // recommended by fschaefer on github\n    //\n    // sure, and webreflection says ^_^\n    // ... this will nerever possibly return null\n    // ... Opera Mini breaks here with infinite loops\n    Object.getPrototypeOf = function getPrototypeOf(object) {\n      // eslint-disable-next-line no-proto\n      var proto = object.__proto__;\n\n      if (proto || proto == null) {\n        // `undefined` is for pre-proto browsers\n        return proto;\n      } else if (toStr(object.constructor) === '[object Function]') {\n        return object.constructor.prototype;\n      } else if (object instanceof Object) {\n        return prototypeOfObject;\n      } // Correctly return null for Objects created with `Object.create(null)`\n      // (shammed or native) or `{ __proto__: null}`.  Also returns null for\n      // cross-realm objects on browsers that lack `__proto__` support (like\n      // IE <11), but that's the best we can do.\n\n\n      return null;\n    };\n  } // ES5 15.2.3.3\n  // https://es5.github.io/#x15.2.3.3\n  // check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n\n\n  if (Object.defineProperty) {\n    var doesGetOwnPropertyDescriptorWork = function doesGetOwnPropertyDescriptorWork(object) {\n      try {\n        object.sentinel = 0; // eslint-disable-line no-param-reassign\n\n        return Object.getOwnPropertyDescriptor(object, 'sentinel').value === 0;\n      } catch (exception) {\n        return false;\n      }\n    };\n\n    var getOwnPropertyDescriptorWorksOnObject = doesGetOwnPropertyDescriptorWork({});\n    var getOwnPropertyDescriptorWorksOnDom = typeof document === 'undefined' || doesGetOwnPropertyDescriptorWork(document.createElement('div'));\n\n    if (!getOwnPropertyDescriptorWorksOnDom || !getOwnPropertyDescriptorWorksOnObject) {\n      var getOwnPropertyDescriptorFallback = Object.getOwnPropertyDescriptor;\n    }\n  }\n\n  if (!Object.getOwnPropertyDescriptor || getOwnPropertyDescriptorFallback) {\n    var ERR_NON_OBJECT = 'Object.getOwnPropertyDescriptor called on a non-object: ';\n    /* eslint-disable no-proto */\n\n    Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n      if (isPrimitive(object)) {\n        throw new TypeError(ERR_NON_OBJECT + object);\n      } // make a valiant attempt to use the real getOwnPropertyDescriptor\n      // for I8's DOM elements.\n\n\n      if (getOwnPropertyDescriptorFallback) {\n        try {\n          return getOwnPropertyDescriptorFallback.call(Object, object, property);\n        } catch (exception) {// try the shim if the real one doesn't work\n        }\n      }\n\n      var descriptor; // If object does not owns property return undefined immediately.\n\n      if (!owns(object, property)) {\n        return descriptor;\n      } // If object has a property then it's for sure `configurable`, and\n      // probably `enumerable`. Detect enumerability though.\n\n\n      descriptor = {\n        enumerable: isEnumerable(object, property),\n        configurable: true\n      }; // If JS engine supports accessor properties then property may be a\n      // getter or setter.\n\n      if (supportsAccessors) {\n        // Unfortunately `__lookupGetter__` will return a getter even\n        // if object has own non getter property along with a same named\n        // inherited getter. To avoid misbehavior we temporary remove\n        // `__proto__` so that `__lookupGetter__` will return getter only\n        // if it's owned by an object.\n        var prototype = object.__proto__;\n        var notPrototypeOfObject = object !== prototypeOfObject; // avoid recursion problem, breaking in Opera Mini when\n        // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n        // or any other Object.prototype accessor\n\n        if (notPrototypeOfObject) {\n          object.__proto__ = prototypeOfObject; // eslint-disable-line no-param-reassign\n        }\n\n        var getter = lookupGetter(object, property);\n        var setter = lookupSetter(object, property);\n\n        if (notPrototypeOfObject) {\n          // Once we have getter and setter we can put values back.\n          object.__proto__ = prototype; // eslint-disable-line no-param-reassign\n        }\n\n        if (getter || setter) {\n          if (getter) {\n            descriptor.get = getter;\n          }\n\n          if (setter) {\n            descriptor.set = setter;\n          } // If it was accessor property we're done and return here\n          // in order to avoid adding `value` to the descriptor.\n\n\n          return descriptor;\n        }\n      } // If we got this far we know that object has an own property that is\n      // not an accessor so we set it as a value and return descriptor.\n\n\n      descriptor.value = object[property];\n      descriptor.writable = true;\n      return descriptor;\n    };\n    /* eslint-enable no-proto */\n\n  } // ES5 15.2.3.4\n  // https://es5.github.io/#x15.2.3.4\n\n\n  if (!Object.getOwnPropertyNames) {\n    Object.getOwnPropertyNames = function getOwnPropertyNames(object) {\n      return Object.keys(object);\n    };\n  } // ES5 15.2.3.5\n  // https://es5.github.io/#x15.2.3.5\n\n\n  if (!Object.create) {\n    // Contributed by Brandon Benvie, October, 2012\n    var createEmpty;\n    var supportsProto = !({\n      __proto__: null\n    } instanceof Object); // the following produces false positives\n    // in Opera Mini => not a reliable check\n    // Object.prototype.__proto__ === null\n    // Check for document.domain and active x support\n    // No need to use active x approach when document.domain is not set\n    // see https://github.com/es-shims/es5-shim/issues/150\n    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n\n    /* global ActiveXObject */\n\n    var shouldUseActiveX = function shouldUseActiveX() {\n      // return early if document.domain not set\n      if (!document.domain) {\n        return false;\n      }\n\n      try {\n        return !!new ActiveXObject('htmlfile');\n      } catch (exception) {\n        return false;\n      }\n    }; // This supports IE8 when document.domain is used\n    // see https://github.com/es-shims/es5-shim/issues/150\n    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n\n\n    var getEmptyViaActiveX = function getEmptyViaActiveX() {\n      var empty;\n      var xDoc;\n      xDoc = new ActiveXObject('htmlfile');\n      var script = 'script';\n      xDoc.write('<' + script + '></' + script + '>');\n      xDoc.close();\n      empty = xDoc.parentWindow.Object.prototype;\n      xDoc = null;\n      return empty;\n    }; // The original implementation using an iframe\n    // before the activex approach was added\n    // see https://github.com/es-shims/es5-shim/issues/150\n\n\n    var getEmptyViaIFrame = function getEmptyViaIFrame() {\n      var iframe = document.createElement('iframe');\n      var parent = document.body || document.documentElement;\n      var empty;\n      iframe.style.display = 'none';\n      parent.appendChild(iframe); // eslint-disable-next-line no-script-url\n\n      iframe.src = 'javascript:';\n      empty = iframe.contentWindow.Object.prototype;\n      parent.removeChild(iframe);\n      iframe = null;\n      return empty;\n    };\n    /* global document */\n\n\n    if (supportsProto || typeof document === 'undefined') {\n      createEmpty = function () {\n        return {\n          __proto__: null\n        };\n      };\n    } else {\n      // In old IE __proto__ can't be used to manually set `null`, nor does\n      // any other method exist to make an object that inherits from nothing,\n      // aside from Object.prototype itself. Instead, create a new global\n      // object and *steal* its Object.prototype and strip it bare. This is\n      // used as the prototype to create nullary objects.\n      createEmpty = function () {\n        // Determine which approach to use\n        // see https://github.com/es-shims/es5-shim/issues/150\n        var empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n        delete empty.constructor;\n        delete empty.hasOwnProperty;\n        delete empty.propertyIsEnumerable;\n        delete empty.isPrototypeOf;\n        delete empty.toLocaleString;\n        delete empty.toString;\n        delete empty.valueOf;\n\n        var Empty = function Empty() {};\n\n        Empty.prototype = empty; // short-circuit future calls\n\n        createEmpty = function () {\n          return new Empty();\n        };\n\n        return new Empty();\n      };\n    }\n\n    Object.create = function create(prototype, properties) {\n      var object;\n\n      var Type = function Type() {}; // An empty constructor.\n\n\n      if (prototype === null) {\n        object = createEmpty();\n      } else if (isPrimitive(prototype)) {\n        // In the native implementation `parent` can be `null`\n        // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n        // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n        // like they are in modern browsers. Using `Object.create` on DOM elements\n        // is...err...probably inappropriate, but the native version allows for it.\n        throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n      } else {\n        Type.prototype = prototype;\n        object = new Type(); // IE has no built-in implementation of `Object.getPrototypeOf`\n        // neither `__proto__`, but this manually setting `__proto__` will\n        // guarantee that `Object.getPrototypeOf` will work as expected with\n        // objects created using `Object.create`\n        // eslint-disable-next-line no-proto\n\n        object.__proto__ = prototype;\n      }\n\n      if (properties !== void 0) {\n        Object.defineProperties(object, properties);\n      }\n\n      return object;\n    };\n  } // ES5 15.2.3.6\n  // https://es5.github.io/#x15.2.3.6\n  // Patch for WebKit and IE8 standard mode\n  // Designed by hax <hax.github.com>\n  // related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n  // IE8 Reference:\n  //     https://msdn.microsoft.com/en-us/library/dd282900.aspx\n  //     https://msdn.microsoft.com/en-us/library/dd229916.aspx\n  // WebKit Bugs:\n  //     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n\n  var doesDefinePropertyWork = function doesDefinePropertyWork(object) {\n    try {\n      Object.defineProperty(object, 'sentinel', {});\n      return 'sentinel' in object;\n    } catch (exception) {\n      return false;\n    }\n  }; // check whether defineProperty works if it's given. Otherwise,\n  // shim partially.\n\n\n  if (Object.defineProperty) {\n    var definePropertyWorksOnObject = doesDefinePropertyWork({});\n    var definePropertyWorksOnDom = typeof document === 'undefined' || doesDefinePropertyWork(document.createElement('div'));\n\n    if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {\n      var definePropertyFallback = Object.defineProperty,\n          definePropertiesFallback = Object.defineProperties;\n    }\n  }\n\n  if (!Object.defineProperty || definePropertyFallback) {\n    var ERR_NON_OBJECT_DESCRIPTOR = 'Property description must be an object: ';\n    var ERR_NON_OBJECT_TARGET = 'Object.defineProperty called on non-object: ';\n    var ERR_ACCESSORS_NOT_SUPPORTED = 'getters & setters can not be defined on this javascript engine';\n\n    Object.defineProperty = function defineProperty(object, property, descriptor) {\n      if (isPrimitive(object)) {\n        throw new TypeError(ERR_NON_OBJECT_TARGET + object);\n      }\n\n      if (isPrimitive(descriptor)) {\n        throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);\n      } // make a valiant attempt to use the real defineProperty\n      // for I8's DOM elements.\n\n\n      if (definePropertyFallback) {\n        try {\n          return definePropertyFallback.call(Object, object, property, descriptor);\n        } catch (exception) {// try the shim if the real one doesn't work\n        }\n      } // If it's a data property.\n\n\n      if ('value' in descriptor) {\n        // fail silently if 'writable', 'enumerable', or 'configurable'\n        // are requested but not supported\n\n        /*\n        // alternate approach:\n        if ( // can't implement these features; allow false but not true\n            ('writable' in descriptor && !descriptor.writable) ||\n            ('enumerable' in descriptor && !descriptor.enumerable) ||\n            ('configurable' in descriptor && !descriptor.configurable)\n        ))\n            throw new RangeError(\n                'This implementation of Object.defineProperty does not support configurable, enumerable, or writable.'\n            );\n        */\n        if (supportsAccessors && (lookupGetter(object, property) || lookupSetter(object, property))) {\n          // As accessors are supported only on engines implementing\n          // `__proto__` we can safely override `__proto__` while defining\n          // a property to make sure that we don't hit an inherited\n          // accessor.\n\n          /* eslint-disable no-proto, no-param-reassign */\n          var prototype = object.__proto__;\n          object.__proto__ = prototypeOfObject; // Deleting a property anyway since getter / setter may be\n          // defined on object itself.\n\n          delete object[property];\n          object[property] = descriptor.value; // Setting original `__proto__` back now.\n\n          object.__proto__ = prototype;\n          /* eslint-enable no-proto, no-param-reassign */\n        } else {\n          object[property] = descriptor.value; // eslint-disable-line no-param-reassign\n        }\n      } else {\n        var hasGetter = ('get' in descriptor);\n        var hasSetter = ('set' in descriptor);\n\n        if (!supportsAccessors && (hasGetter || hasSetter)) {\n          throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n        } // If we got that far then getters and setters can be defined !!\n\n\n        if (hasGetter) {\n          defineGetter(object, property, descriptor.get);\n        }\n\n        if (hasSetter) {\n          defineSetter(object, property, descriptor.set);\n        }\n      }\n\n      return object;\n    };\n  } // ES5 15.2.3.7\n  // https://es5.github.io/#x15.2.3.7\n\n\n  if (!Object.defineProperties || definePropertiesFallback) {\n    Object.defineProperties = function defineProperties(object, properties) {\n      // make a valiant attempt to use the real defineProperties\n      if (definePropertiesFallback) {\n        try {\n          return definePropertiesFallback.call(Object, object, properties);\n        } catch (exception) {// try the shim if the real one doesn't work\n        }\n      }\n\n      Object.keys(properties).forEach(function (property) {\n        if (property !== '__proto__') {\n          Object.defineProperty(object, property, properties[property]);\n        }\n      });\n      return object;\n    };\n  } // ES5 15.2.3.8\n  // https://es5.github.io/#x15.2.3.8\n\n\n  if (!Object.seal) {\n    Object.seal = function seal(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.seal can only be called on Objects.');\n      } // this is misleading and breaks feature-detection, but\n      // allows \"securable\" code to \"gracefully\" degrade to working\n      // but insecure code.\n\n\n      return object;\n    };\n  } // ES5 15.2.3.9\n  // https://es5.github.io/#x15.2.3.9\n\n\n  if (!Object.freeze) {\n    Object.freeze = function freeze(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.freeze can only be called on Objects.');\n      } // this is misleading and breaks feature-detection, but\n      // allows \"securable\" code to \"gracefully\" degrade to working\n      // but insecure code.\n\n\n      return object;\n    };\n  } // detect a Rhino bug and patch it\n\n\n  try {\n    Object.freeze(function () {});\n  } catch (exception) {\n    Object.freeze = function (freezeObject) {\n      return function freeze(object) {\n        if (typeof object === 'function') {\n          return object;\n        }\n\n        return freezeObject(object);\n      };\n    }(Object.freeze);\n  } // ES5 15.2.3.10\n  // https://es5.github.io/#x15.2.3.10\n\n\n  if (!Object.preventExtensions) {\n    Object.preventExtensions = function preventExtensions(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.preventExtensions can only be called on Objects.');\n      } // this is misleading and breaks feature-detection, but\n      // allows \"securable\" code to \"gracefully\" degrade to working\n      // but insecure code.\n\n\n      return object;\n    };\n  } // ES5 15.2.3.11\n  // https://es5.github.io/#x15.2.3.11\n\n\n  if (!Object.isSealed) {\n    Object.isSealed = function isSealed(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.isSealed can only be called on Objects.');\n      }\n\n      return false;\n    };\n  } // ES5 15.2.3.12\n  // https://es5.github.io/#x15.2.3.12\n\n\n  if (!Object.isFrozen) {\n    Object.isFrozen = function isFrozen(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.isFrozen can only be called on Objects.');\n      }\n\n      return false;\n    };\n  } // ES5 15.2.3.13\n  // https://es5.github.io/#x15.2.3.13\n\n\n  if (!Object.isExtensible) {\n    Object.isExtensible = function isExtensible(object) {\n      // 1. If Type(O) is not Object throw a TypeError exception.\n      if (Object(object) !== object) {\n        throw new TypeError('Object.isExtensible can only be called on Objects.');\n      } // 2. Return the Boolean value of the [[Extensible]] internal property of O.\n\n\n      var name = '';\n\n      while (owns(object, name)) {\n        name += '?';\n      }\n\n      object[name] = true; // eslint-disable-line no-param-reassign\n\n      var returnValue = owns(object, name);\n      delete object[name]; // eslint-disable-line no-param-reassign\n\n      return returnValue;\n    };\n  }\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","returnExports","call","Function","prototypeOfObject","Object","prototype","owns","bind","hasOwnProperty","isEnumerable","propertyIsEnumerable","toStr","toString","defineGetter","defineSetter","lookupGetter","lookupSetter","supportsAccessors","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","isPrimitive","o","getPrototypeOf","object","proto","__proto__","constructor","defineProperty","doesGetOwnPropertyDescriptorWork","sentinel","getOwnPropertyDescriptor","value","exception","getOwnPropertyDescriptorWorksOnObject","getOwnPropertyDescriptorWorksOnDom","document","createElement","getOwnPropertyDescriptorFallback","ERR_NON_OBJECT","property","TypeError","descriptor","enumerable","configurable","notPrototypeOfObject","getter","setter","get","set","writable","getOwnPropertyNames","keys","create","createEmpty","supportsProto","shouldUseActiveX","domain","ActiveXObject","getEmptyViaActiveX","empty","xDoc","script","write","close","parentWindow","getEmptyViaIFrame","iframe","parent","body","documentElement","style","display","appendChild","src","contentWindow","removeChild","isPrototypeOf","toLocaleString","valueOf","Empty","properties","Type","defineProperties","doesDefinePropertyWork","definePropertyWorksOnObject","definePropertyWorksOnDom","definePropertyFallback","definePropertiesFallback","ERR_NON_OBJECT_DESCRIPTOR","ERR_NON_OBJECT_TARGET","ERR_ACCESSORS_NOT_SUPPORTED","hasGetter","hasSetter","forEach","seal","freeze","freezeObject","preventExtensions","isSealed","isFrozen","isExtensible","name","returnValue"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/es5-shim/es5-sham.js"],"sourcesContent":["/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2020 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n; // eslint-disable-line no-extra-semi\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n    'use strict';\n\n    /* global define */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory(); // eslint-disable-line no-param-reassign\n    }\n}(this, function () {\n\n    var call = Function.call;\n    var prototypeOfObject = Object.prototype;\n    var owns = call.bind(prototypeOfObject.hasOwnProperty);\n    var isEnumerable = call.bind(prototypeOfObject.propertyIsEnumerable);\n    var toStr = call.bind(prototypeOfObject.toString);\n\n    // If JS engine supports accessors creating shortcuts.\n    var defineGetter;\n    var defineSetter;\n    var lookupGetter;\n    var lookupSetter;\n    var supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n    if (supportsAccessors) {\n        /* eslint-disable no-underscore-dangle, no-restricted-properties */\n        defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n        defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n        lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n        lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n        /* eslint-enable no-underscore-dangle, no-restricted-properties */\n    }\n\n    var isPrimitive = function isPrimitive(o) {\n        return o == null || (typeof o !== 'object' && typeof o !== 'function');\n    };\n\n    // ES5 15.2.3.2\n    // https://es5.github.io/#x15.2.3.2\n    if (!Object.getPrototypeOf) {\n        // https://github.com/es-shims/es5-shim/issues#issue/2\n        // https://johnresig.com/blog/objectgetprototypeof/\n        // recommended by fschaefer on github\n        //\n        // sure, and webreflection says ^_^\n        // ... this will nerever possibly return null\n        // ... Opera Mini breaks here with infinite loops\n        Object.getPrototypeOf = function getPrototypeOf(object) {\n            // eslint-disable-next-line no-proto\n            var proto = object.__proto__;\n            if (proto || proto == null) { // `undefined` is for pre-proto browsers\n                return proto;\n            } else if (toStr(object.constructor) === '[object Function]') {\n                return object.constructor.prototype;\n            } else if (object instanceof Object) {\n                return prototypeOfObject;\n            }\n            // Correctly return null for Objects created with `Object.create(null)`\n            // (shammed or native) or `{ __proto__: null}`.  Also returns null for\n            // cross-realm objects on browsers that lack `__proto__` support (like\n            // IE <11), but that's the best we can do.\n            return null;\n\n        };\n    }\n\n    // ES5 15.2.3.3\n    // https://es5.github.io/#x15.2.3.3\n\n    // check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n    if (Object.defineProperty) {\n        var doesGetOwnPropertyDescriptorWork = function doesGetOwnPropertyDescriptorWork(object) {\n            try {\n                object.sentinel = 0; // eslint-disable-line no-param-reassign\n                return Object.getOwnPropertyDescriptor(object, 'sentinel').value === 0;\n            } catch (exception) {\n                return false;\n            }\n        };\n        var getOwnPropertyDescriptorWorksOnObject = doesGetOwnPropertyDescriptorWork({});\n        var getOwnPropertyDescriptorWorksOnDom = typeof document === 'undefined'\n            || doesGetOwnPropertyDescriptorWork(document.createElement('div'));\n        if (!getOwnPropertyDescriptorWorksOnDom || !getOwnPropertyDescriptorWorksOnObject) {\n            var getOwnPropertyDescriptorFallback = Object.getOwnPropertyDescriptor;\n        }\n    }\n\n    if (!Object.getOwnPropertyDescriptor || getOwnPropertyDescriptorFallback) {\n        var ERR_NON_OBJECT = 'Object.getOwnPropertyDescriptor called on a non-object: ';\n\n        /* eslint-disable no-proto */\n        Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            if (isPrimitive(object)) {\n                throw new TypeError(ERR_NON_OBJECT + object);\n            }\n\n            // make a valiant attempt to use the real getOwnPropertyDescriptor\n            // for I8's DOM elements.\n            if (getOwnPropertyDescriptorFallback) {\n                try {\n                    return getOwnPropertyDescriptorFallback.call(Object, object, property);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            var descriptor;\n\n            // If object does not owns property return undefined immediately.\n            if (!owns(object, property)) {\n                return descriptor;\n            }\n\n            // If object has a property then it's for sure `configurable`, and\n            // probably `enumerable`. Detect enumerability though.\n            descriptor = {\n                enumerable: isEnumerable(object, property),\n                configurable: true\n            };\n\n            // If JS engine supports accessor properties then property may be a\n            // getter or setter.\n            if (supportsAccessors) {\n                // Unfortunately `__lookupGetter__` will return a getter even\n                // if object has own non getter property along with a same named\n                // inherited getter. To avoid misbehavior we temporary remove\n                // `__proto__` so that `__lookupGetter__` will return getter only\n                // if it's owned by an object.\n                var prototype = object.__proto__;\n                var notPrototypeOfObject = object !== prototypeOfObject;\n                // avoid recursion problem, breaking in Opera Mini when\n                // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n                // or any other Object.prototype accessor\n                if (notPrototypeOfObject) {\n                    object.__proto__ = prototypeOfObject; // eslint-disable-line no-param-reassign\n                }\n\n                var getter = lookupGetter(object, property);\n                var setter = lookupSetter(object, property);\n\n                if (notPrototypeOfObject) {\n                    // Once we have getter and setter we can put values back.\n                    object.__proto__ = prototype; // eslint-disable-line no-param-reassign\n                }\n\n                if (getter || setter) {\n                    if (getter) {\n                        descriptor.get = getter;\n                    }\n                    if (setter) {\n                        descriptor.set = setter;\n                    }\n                    // If it was accessor property we're done and return here\n                    // in order to avoid adding `value` to the descriptor.\n                    return descriptor;\n                }\n            }\n\n            // If we got this far we know that object has an own property that is\n            // not an accessor so we set it as a value and return descriptor.\n            descriptor.value = object[property];\n            descriptor.writable = true;\n            return descriptor;\n        };\n        /* eslint-enable no-proto */\n    }\n\n    // ES5 15.2.3.4\n    // https://es5.github.io/#x15.2.3.4\n    if (!Object.getOwnPropertyNames) {\n        Object.getOwnPropertyNames = function getOwnPropertyNames(object) {\n            return Object.keys(object);\n        };\n    }\n\n    // ES5 15.2.3.5\n    // https://es5.github.io/#x15.2.3.5\n    if (!Object.create) {\n\n        // Contributed by Brandon Benvie, October, 2012\n        var createEmpty;\n        var supportsProto = !({ __proto__: null } instanceof Object);\n        // the following produces false positives\n        // in Opera Mini => not a reliable check\n        // Object.prototype.__proto__ === null\n\n        // Check for document.domain and active x support\n        // No need to use active x approach when document.domain is not set\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        /* global ActiveXObject */\n        var shouldUseActiveX = function shouldUseActiveX() {\n            // return early if document.domain not set\n            if (!document.domain) {\n                return false;\n            }\n\n            try {\n                return !!new ActiveXObject('htmlfile');\n            } catch (exception) {\n                return false;\n            }\n        };\n\n        // This supports IE8 when document.domain is used\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        var getEmptyViaActiveX = function getEmptyViaActiveX() {\n            var empty;\n            var xDoc;\n\n            xDoc = new ActiveXObject('htmlfile');\n\n            var script = 'script';\n            xDoc.write('<' + script + '></' + script + '>');\n            xDoc.close();\n\n            empty = xDoc.parentWindow.Object.prototype;\n            xDoc = null;\n\n            return empty;\n        };\n\n        // The original implementation using an iframe\n        // before the activex approach was added\n        // see https://github.com/es-shims/es5-shim/issues/150\n        var getEmptyViaIFrame = function getEmptyViaIFrame() {\n            var iframe = document.createElement('iframe');\n            var parent = document.body || document.documentElement;\n            var empty;\n\n            iframe.style.display = 'none';\n            parent.appendChild(iframe);\n            // eslint-disable-next-line no-script-url\n            iframe.src = 'javascript:';\n\n            empty = iframe.contentWindow.Object.prototype;\n            parent.removeChild(iframe);\n            iframe = null;\n\n            return empty;\n        };\n\n        /* global document */\n        if (supportsProto || typeof document === 'undefined') {\n            createEmpty = function () {\n                return { __proto__: null };\n            };\n        } else {\n            // In old IE __proto__ can't be used to manually set `null`, nor does\n            // any other method exist to make an object that inherits from nothing,\n            // aside from Object.prototype itself. Instead, create a new global\n            // object and *steal* its Object.prototype and strip it bare. This is\n            // used as the prototype to create nullary objects.\n            createEmpty = function () {\n                // Determine which approach to use\n                // see https://github.com/es-shims/es5-shim/issues/150\n                var empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n\n                delete empty.constructor;\n                delete empty.hasOwnProperty;\n                delete empty.propertyIsEnumerable;\n                delete empty.isPrototypeOf;\n                delete empty.toLocaleString;\n                delete empty.toString;\n                delete empty.valueOf;\n\n                var Empty = function Empty() {};\n                Empty.prototype = empty;\n                // short-circuit future calls\n                createEmpty = function () {\n                    return new Empty();\n                };\n                return new Empty();\n            };\n        }\n\n        Object.create = function create(prototype, properties) {\n\n            var object;\n            var Type = function Type() {}; // An empty constructor.\n\n            if (prototype === null) {\n                object = createEmpty();\n            } else if (isPrimitive(prototype)) {\n                // In the native implementation `parent` can be `null`\n                // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n                // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n                // like they are in modern browsers. Using `Object.create` on DOM elements\n                // is...err...probably inappropriate, but the native version allows for it.\n                throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n            } else {\n                Type.prototype = prototype;\n                object = new Type();\n                // IE has no built-in implementation of `Object.getPrototypeOf`\n                // neither `__proto__`, but this manually setting `__proto__` will\n                // guarantee that `Object.getPrototypeOf` will work as expected with\n                // objects created using `Object.create`\n                // eslint-disable-next-line no-proto\n                object.__proto__ = prototype;\n            }\n\n            if (properties !== void 0) {\n                Object.defineProperties(object, properties);\n            }\n\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.6\n    // https://es5.github.io/#x15.2.3.6\n\n    // Patch for WebKit and IE8 standard mode\n    // Designed by hax <hax.github.com>\n    // related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n    // IE8 Reference:\n    //     https://msdn.microsoft.com/en-us/library/dd282900.aspx\n    //     https://msdn.microsoft.com/en-us/library/dd229916.aspx\n    // WebKit Bugs:\n    //     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n    var doesDefinePropertyWork = function doesDefinePropertyWork(object) {\n        try {\n            Object.defineProperty(object, 'sentinel', {});\n            return 'sentinel' in object;\n        } catch (exception) {\n            return false;\n        }\n    };\n\n    // check whether defineProperty works if it's given. Otherwise,\n    // shim partially.\n    if (Object.defineProperty) {\n        var definePropertyWorksOnObject = doesDefinePropertyWork({});\n        var definePropertyWorksOnDom = typeof document === 'undefined'\n            || doesDefinePropertyWork(document.createElement('div'));\n        if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {\n            var definePropertyFallback = Object.defineProperty,\n                definePropertiesFallback = Object.defineProperties;\n        }\n    }\n\n    if (!Object.defineProperty || definePropertyFallback) {\n        var ERR_NON_OBJECT_DESCRIPTOR = 'Property description must be an object: ';\n        var ERR_NON_OBJECT_TARGET = 'Object.defineProperty called on non-object: ';\n        var ERR_ACCESSORS_NOT_SUPPORTED = 'getters & setters can not be defined on this javascript engine';\n\n        Object.defineProperty = function defineProperty(object, property, descriptor) {\n            if (isPrimitive(object)) {\n                throw new TypeError(ERR_NON_OBJECT_TARGET + object);\n            }\n            if (isPrimitive(descriptor)) {\n                throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);\n            }\n            // make a valiant attempt to use the real defineProperty\n            // for I8's DOM elements.\n            if (definePropertyFallback) {\n                try {\n                    return definePropertyFallback.call(Object, object, property, descriptor);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            // If it's a data property.\n            if ('value' in descriptor) {\n                // fail silently if 'writable', 'enumerable', or 'configurable'\n                // are requested but not supported\n                /*\n                // alternate approach:\n                if ( // can't implement these features; allow false but not true\n                    ('writable' in descriptor && !descriptor.writable) ||\n                    ('enumerable' in descriptor && !descriptor.enumerable) ||\n                    ('configurable' in descriptor && !descriptor.configurable)\n                ))\n                    throw new RangeError(\n                        'This implementation of Object.defineProperty does not support configurable, enumerable, or writable.'\n                    );\n                */\n\n                if (supportsAccessors && (lookupGetter(object, property) || lookupSetter(object, property))) {\n                    // As accessors are supported only on engines implementing\n                    // `__proto__` we can safely override `__proto__` while defining\n                    // a property to make sure that we don't hit an inherited\n                    // accessor.\n                    /* eslint-disable no-proto, no-param-reassign */\n                    var prototype = object.__proto__;\n                    object.__proto__ = prototypeOfObject;\n                    // Deleting a property anyway since getter / setter may be\n                    // defined on object itself.\n                    delete object[property];\n                    object[property] = descriptor.value;\n                    // Setting original `__proto__` back now.\n                    object.__proto__ = prototype;\n                    /* eslint-enable no-proto, no-param-reassign */\n                } else {\n                    object[property] = descriptor.value; // eslint-disable-line no-param-reassign\n                }\n            } else {\n                var hasGetter = 'get' in descriptor;\n                var hasSetter = 'set' in descriptor;\n                if (!supportsAccessors && (hasGetter || hasSetter)) {\n                    throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n                }\n                // If we got that far then getters and setters can be defined !!\n                if (hasGetter) {\n                    defineGetter(object, property, descriptor.get);\n                }\n                if (hasSetter) {\n                    defineSetter(object, property, descriptor.set);\n                }\n            }\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.7\n    // https://es5.github.io/#x15.2.3.7\n    if (!Object.defineProperties || definePropertiesFallback) {\n        Object.defineProperties = function defineProperties(object, properties) {\n            // make a valiant attempt to use the real defineProperties\n            if (definePropertiesFallback) {\n                try {\n                    return definePropertiesFallback.call(Object, object, properties);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            Object.keys(properties).forEach(function (property) {\n                if (property !== '__proto__') {\n                    Object.defineProperty(object, property, properties[property]);\n                }\n            });\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.8\n    // https://es5.github.io/#x15.2.3.8\n    if (!Object.seal) {\n        Object.seal = function seal(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.seal can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.9\n    // https://es5.github.io/#x15.2.3.9\n    if (!Object.freeze) {\n        Object.freeze = function freeze(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.freeze can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // detect a Rhino bug and patch it\n    try {\n        Object.freeze(function () {});\n    } catch (exception) {\n        Object.freeze = (function (freezeObject) {\n            return function freeze(object) {\n                if (typeof object === 'function') {\n                    return object;\n                }\n                return freezeObject(object);\n\n            };\n        }(Object.freeze));\n    }\n\n    // ES5 15.2.3.10\n    // https://es5.github.io/#x15.2.3.10\n    if (!Object.preventExtensions) {\n        Object.preventExtensions = function preventExtensions(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.preventExtensions can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.11\n    // https://es5.github.io/#x15.2.3.11\n    if (!Object.isSealed) {\n        Object.isSealed = function isSealed(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isSealed can only be called on Objects.');\n            }\n            return false;\n        };\n    }\n\n    // ES5 15.2.3.12\n    // https://es5.github.io/#x15.2.3.12\n    if (!Object.isFrozen) {\n        Object.isFrozen = function isFrozen(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isFrozen can only be called on Objects.');\n            }\n            return false;\n        };\n    }\n\n    // ES5 15.2.3.13\n    // https://es5.github.io/#x15.2.3.13\n    if (!Object.isExtensible) {\n        Object.isExtensible = function isExtensible(object) {\n            // 1. If Type(O) is not Object throw a TypeError exception.\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isExtensible can only be called on Objects.');\n            }\n            // 2. Return the Boolean value of the [[Extensible]] internal property of O.\n            var name = '';\n            while (owns(object, name)) {\n                name += '?';\n            }\n            object[name] = true; // eslint-disable-line no-param-reassign\n            var returnValue = owns(object, name);\n            delete object[name]; // eslint-disable-line no-param-reassign\n            return returnValue;\n        };\n    }\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}