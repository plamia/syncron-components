{"ast":null,"code":"import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n  return count <= 0 ? function () {\n    return EMPTY;\n  } : operate(function (source, subscriber) {\n    var seen = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      if (++seen <= count) {\n        subscriber.next(value);\n\n        if (count <= seen) {\n          subscriber.complete();\n        }\n      }\n    }));\n  });\n} //# sourceMappingURL=take.js.map","map":{"version":3,"names":["EMPTY","operate","OperatorSubscriber","take","count","source","subscriber","seen","subscribe","value","next","complete"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/rxjs/dist/esm5/internal/operators/take.js"],"sourcesContent":["import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var seen = 0;\n            source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n//# sourceMappingURL=take.js.map"],"mappings":"AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;EACxB,OAAOA,KAAK,IAAI,CAAT,GAEC,YAAY;IAAE,OAAOJ,KAAP;EAAe,CAF9B,GAGDC,OAAO,CAAC,UAAUI,MAAV,EAAkBC,UAAlB,EAA8B;IACpC,IAAIC,IAAI,GAAG,CAAX;IACAF,MAAM,CAACG,SAAP,CAAiB,IAAIN,kBAAJ,CAAuBI,UAAvB,EAAmC,UAAUG,KAAV,EAAiB;MACjE,IAAI,EAAEF,IAAF,IAAUH,KAAd,EAAqB;QACjBE,UAAU,CAACI,IAAX,CAAgBD,KAAhB;;QACA,IAAIL,KAAK,IAAIG,IAAb,EAAmB;UACfD,UAAU,CAACK,QAAX;QACH;MACJ;IACJ,CAPgB,CAAjB;EAQH,CAVQ,CAHb;AAcH,C,CACD"},"metadata":{},"sourceType":"module"}