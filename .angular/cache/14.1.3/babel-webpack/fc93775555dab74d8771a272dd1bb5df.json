{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n  return operate(function (source, subscriber) {\n    var prev;\n    var hasPrev = false;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var p = prev;\n      prev = value;\n      hasPrev && subscriber.next([p, value]);\n      hasPrev = true;\n    }));\n  });\n} //# sourceMappingURL=pairwise.js.map","map":{"version":3,"names":["operate","OperatorSubscriber","pairwise","source","subscriber","prev","hasPrev","subscribe","value","p","next"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js"],"sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,QAAT,GAAoB;EACvB,OAAOF,OAAO,CAAC,UAAUG,MAAV,EAAkBC,UAAlB,EAA8B;IACzC,IAAIC,IAAJ;IACA,IAAIC,OAAO,GAAG,KAAd;IACAH,MAAM,CAACI,SAAP,CAAiB,IAAIN,kBAAJ,CAAuBG,UAAvB,EAAmC,UAAUI,KAAV,EAAiB;MACjE,IAAIC,CAAC,GAAGJ,IAAR;MACAA,IAAI,GAAGG,KAAP;MACAF,OAAO,IAAIF,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAD,EAAID,KAAJ,CAAhB,CAAX;MACAF,OAAO,GAAG,IAAV;IACH,CALgB,CAAjB;EAMH,CATa,CAAd;AAUH,C,CACD"},"metadata":{},"sourceType":"module"}