{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar has = require('has');\n\nvar channel = require('side-channel')();\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar SLOT = {\n  assert: function (O, slot) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    channel.assert(O);\n  },\n  get: function (O, slot) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    var slots = channel.get(O);\n    return slots && slots['$' + slot];\n  },\n  has: function (O, slot) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    var slots = channel.get(O);\n    return !!slots && has(slots, '$' + slot);\n  },\n  set: function (O, slot, V) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    var slots = channel.get(O);\n\n    if (!slots) {\n      slots = {};\n      channel.set(O, slots);\n    }\n\n    slots['$' + slot] = V;\n  }\n};\n\nif (Object.freeze) {\n  Object.freeze(SLOT);\n}\n\nmodule.exports = SLOT;","map":{"version":3,"names":["GetIntrinsic","require","has","channel","$TypeError","SLOT","assert","O","slot","get","slots","set","V","Object","freeze","module","exports"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/internal-slot/index.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar has = require('has');\nvar channel = require('side-channel')();\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar SLOT = {\n\tassert: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tchannel.assert(O);\n\t},\n\tget: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\treturn slots && slots['$' + slot];\n\t},\n\thas: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\treturn !!slots && has(slots, '$' + slot);\n\t},\n\tset: function (O, slot, V) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\tif (!slots) {\n\t\t\tslots = {};\n\t\t\tchannel.set(O, slots);\n\t\t}\n\t\tslots['$' + slot] = V;\n\t}\n};\n\nif (Object.freeze) {\n\tObject.freeze(SLOT);\n}\n\nmodule.exports = SLOT;\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CAAP,EAAd;;AAEA,IAAIG,UAAU,GAAGJ,YAAY,CAAC,aAAD,CAA7B;AAEA,IAAIK,IAAI,GAAG;EACVC,MAAM,EAAE,UAAUC,CAAV,EAAaC,IAAb,EAAmB;IAC1B,IAAI,CAACD,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;MAC7D,MAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;IACA;;IACD,IAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;MAC7B,MAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;IACA;;IACDD,OAAO,CAACG,MAAR,CAAeC,CAAf;EACA,CATS;EAUVE,GAAG,EAAE,UAAUF,CAAV,EAAaC,IAAb,EAAmB;IACvB,IAAI,CAACD,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;MAC7D,MAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;IACA;;IACD,IAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;MAC7B,MAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;IACA;;IACD,IAAIM,KAAK,GAAGP,OAAO,CAACM,GAAR,CAAYF,CAAZ,CAAZ;IACA,OAAOG,KAAK,IAAIA,KAAK,CAAC,MAAMF,IAAP,CAArB;EACA,CAnBS;EAoBVN,GAAG,EAAE,UAAUK,CAAV,EAAaC,IAAb,EAAmB;IACvB,IAAI,CAACD,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;MAC7D,MAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;IACA;;IACD,IAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;MAC7B,MAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;IACA;;IACD,IAAIM,KAAK,GAAGP,OAAO,CAACM,GAAR,CAAYF,CAAZ,CAAZ;IACA,OAAO,CAAC,CAACG,KAAF,IAAWR,GAAG,CAACQ,KAAD,EAAQ,MAAMF,IAAd,CAArB;EACA,CA7BS;EA8BVG,GAAG,EAAE,UAAUJ,CAAV,EAAaC,IAAb,EAAmBI,CAAnB,EAAsB;IAC1B,IAAI,CAACL,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;MAC7D,MAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;IACA;;IACD,IAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;MAC7B,MAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;IACA;;IACD,IAAIM,KAAK,GAAGP,OAAO,CAACM,GAAR,CAAYF,CAAZ,CAAZ;;IACA,IAAI,CAACG,KAAL,EAAY;MACXA,KAAK,GAAG,EAAR;MACAP,OAAO,CAACQ,GAAR,CAAYJ,CAAZ,EAAeG,KAAf;IACA;;IACDA,KAAK,CAAC,MAAMF,IAAP,CAAL,GAAoBI,CAApB;EACA;AA3CS,CAAX;;AA8CA,IAAIC,MAAM,CAACC,MAAX,EAAmB;EAClBD,MAAM,CAACC,MAAP,CAAcT,IAAd;AACA;;AAEDU,MAAM,CAACC,OAAP,GAAiBX,IAAjB"},"metadata":{},"sourceType":"script"}