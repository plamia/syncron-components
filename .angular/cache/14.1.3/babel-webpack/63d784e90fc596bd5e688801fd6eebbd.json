{"ast":null,"code":"'use strict';\n\nvar getIterator = require('es-get-iterator');\n\nvar $TypeError = TypeError;\n\nvar iterate = require('iterate-iterator');\n\nmodule.exports = function iterateValue(iterable) {\n  var iterator = getIterator(iterable);\n\n  if (!iterator) {\n    throw new $TypeError('non-iterable value provided');\n  }\n\n  if (arguments.length > 1) {\n    return iterate(iterator, arguments[1]);\n  }\n\n  return iterate(iterator);\n};","map":{"version":3,"names":["getIterator","require","$TypeError","TypeError","iterate","module","exports","iterateValue","iterable","iterator","arguments","length"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/iterate-value/index.js"],"sourcesContent":["'use strict';\n\nvar getIterator = require('es-get-iterator');\nvar $TypeError = TypeError;\nvar iterate = require('iterate-iterator');\n\nmodule.exports = function iterateValue(iterable) {\n\tvar iterator = getIterator(iterable);\n\tif (!iterator) {\n\t\tthrow new $TypeError('non-iterable value provided');\n\t}\n\tif (arguments.length > 1) {\n\t\treturn iterate(iterator, arguments[1]);\n\t}\n\treturn iterate(iterator);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIC,UAAU,GAAGC,SAAjB;;AACA,IAAIC,OAAO,GAAGH,OAAO,CAAC,kBAAD,CAArB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EAChD,IAAIC,QAAQ,GAAGT,WAAW,CAACQ,QAAD,CAA1B;;EACA,IAAI,CAACC,QAAL,EAAe;IACd,MAAM,IAAIP,UAAJ,CAAe,6BAAf,CAAN;EACA;;EACD,IAAIQ,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;IACzB,OAAOP,OAAO,CAACK,QAAD,EAAWC,SAAS,CAAC,CAAD,CAApB,CAAd;EACA;;EACD,OAAON,OAAO,CAACK,QAAD,CAAd;AACA,CATD"},"metadata":{},"sourceType":"script"}