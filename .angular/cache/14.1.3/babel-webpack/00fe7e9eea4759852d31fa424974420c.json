{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\"; // NOTE: The types exported from this file are simplified versions of the types exported\n// by @storybook/csf, with the simpler form retained for backwards compatibility.\n// We will likely start exporting the more complex <StoryFnReturnType> based types in 7.0\n// The `any` here is the story store's `StoreItem` record. Ideally we should probably only\n// pass a defined subset of that full data, but we pass it all so far :shrug:\n\nexport var types;\n\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"TOOLEXTRA\"] = \"toolextra\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (types = {}));\n\nexport function isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}","map":{"version":3,"names":["types","isSupportedType","type","Object","values","find","typeVal"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/addons/dist/esm/types.js"],"sourcesContent":["import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\n// NOTE: The types exported from this file are simplified versions of the types exported\n// by @storybook/csf, with the simpler form retained for backwards compatibility.\n// We will likely start exporting the more complex <StoryFnReturnType> based types in 7.0\n// The `any` here is the story store's `StoreItem` record. Ideally we should probably only\n// pass a defined subset of that full data, but we pass it all so far :shrug:\nexport var types;\n\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"TOOLEXTRA\"] = \"toolextra\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (types = {}));\n\nexport function isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}"],"mappings":"AAAA,OAAO,kCAAP;AACA,OAAO,wCAAP;AACA,OAAO,qCAAP,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIA,KAAJ;;AAEP,CAAC,UAAUA,KAAV,EAAiB;EAChBA,KAAK,CAAC,KAAD,CAAL,GAAe,KAAf;EACAA,KAAK,CAAC,OAAD,CAAL,GAAiB,OAAjB;EACAA,KAAK,CAAC,MAAD,CAAL,GAAgB,MAAhB;EACAA,KAAK,CAAC,WAAD,CAAL,GAAqB,WAArB;EACAA,KAAK,CAAC,SAAD,CAAL,GAAmB,SAAnB;EACAA,KAAK,CAAC,eAAD,CAAL,GAAyB,eAAzB;AACD,CAPD,EAOGA,KAAK,KAAKA,KAAK,GAAG,EAAb,CAPR;;AASA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;EACpC,OAAO,CAAC,CAACC,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBK,IAArB,CAA0B,UAAUC,OAAV,EAAmB;IACpD,OAAOA,OAAO,KAAKJ,IAAnB;EACD,CAFQ,CAAT;AAGD"},"metadata":{},"sourceType":"module"}