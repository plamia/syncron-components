{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function single(predicate) {\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    var singleValue;\n    var seenValue = false;\n    var index = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      seenValue = true;\n\n      if (!predicate || predicate(value, index++, source)) {\n        hasValue && subscriber.error(new SequenceError('Too many matching values'));\n        hasValue = true;\n        singleValue = value;\n      }\n    }, function () {\n      if (hasValue) {\n        subscriber.next(singleValue);\n        subscriber.complete();\n      } else {\n        subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n      }\n    }));\n  });\n} //# sourceMappingURL=single.js.map","map":{"version":3,"names":["EmptyError","SequenceError","NotFoundError","operate","OperatorSubscriber","single","predicate","source","subscriber","hasValue","singleValue","seenValue","index","subscribe","value","error","next","complete"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/rxjs/dist/esm5/internal/operators/single.js"],"sourcesContent":["import { EmptyError } from '../util/EmptyError';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function single(predicate) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var singleValue;\n        var seenValue = false;\n        var index = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            seenValue = true;\n            if (!predicate || predicate(value, index++, source)) {\n                hasValue && subscriber.error(new SequenceError('Too many matching values'));\n                hasValue = true;\n                singleValue = value;\n            }\n        }, function () {\n            if (hasValue) {\n                subscriber.next(singleValue);\n                subscriber.complete();\n            }\n            else {\n                subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n            }\n        }));\n    });\n}\n//# sourceMappingURL=single.js.map"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,MAAT,CAAgBC,SAAhB,EAA2B;EAC9B,OAAOH,OAAO,CAAC,UAAUI,MAAV,EAAkBC,UAAlB,EAA8B;IACzC,IAAIC,QAAQ,GAAG,KAAf;IACA,IAAIC,WAAJ;IACA,IAAIC,SAAS,GAAG,KAAhB;IACA,IAAIC,KAAK,GAAG,CAAZ;IACAL,MAAM,CAACM,SAAP,CAAiB,IAAIT,kBAAJ,CAAuBI,UAAvB,EAAmC,UAAUM,KAAV,EAAiB;MACjEH,SAAS,GAAG,IAAZ;;MACA,IAAI,CAACL,SAAD,IAAcA,SAAS,CAACQ,KAAD,EAAQF,KAAK,EAAb,EAAiBL,MAAjB,CAA3B,EAAqD;QACjDE,QAAQ,IAAID,UAAU,CAACO,KAAX,CAAiB,IAAId,aAAJ,CAAkB,0BAAlB,CAAjB,CAAZ;QACAQ,QAAQ,GAAG,IAAX;QACAC,WAAW,GAAGI,KAAd;MACH;IACJ,CAPgB,EAOd,YAAY;MACX,IAAIL,QAAJ,EAAc;QACVD,UAAU,CAACQ,IAAX,CAAgBN,WAAhB;QACAF,UAAU,CAACS,QAAX;MACH,CAHD,MAIK;QACDT,UAAU,CAACO,KAAX,CAAiBJ,SAAS,GAAG,IAAIT,aAAJ,CAAkB,oBAAlB,CAAH,GAA6C,IAAIF,UAAJ,EAAvE;MACH;IACJ,CAfgB,CAAjB;EAgBH,CArBa,CAAd;AAsBH,C,CACD"},"metadata":{},"sourceType":"module"}