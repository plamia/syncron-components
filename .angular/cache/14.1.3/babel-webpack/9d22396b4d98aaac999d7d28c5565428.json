{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { combineArgs, mapArgsToTypes, validateOptions, deepDiff, DEEPLY_EQUAL } from './args';\n\nfunction deleteUndefined(obj) {\n  // eslint-disable-next-line no-param-reassign\n  Object.keys(obj).forEach(function (key) {\n    return obj[key] === undefined && delete obj[key];\n  });\n  return obj;\n}\n\nexport var ArgsStore = /*#__PURE__*/function () {\n  function ArgsStore() {\n    _classCallCheck(this, ArgsStore);\n\n    this.initialArgsByStoryId = {};\n    this.argsByStoryId = {};\n  }\n\n  _createClass(ArgsStore, [{\n    key: \"get\",\n    value: function get(storyId) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n\n      return this.argsByStoryId[storyId];\n    }\n  }, {\n    key: \"setInitial\",\n    value: function setInitial(story) {\n      if (!this.initialArgsByStoryId[story.id]) {\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {\n        // When we get a new version of a story (with new initialArgs), we re-apply the same diff\n        // that we had previously applied to the old version of the story\n        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n\n        if (delta !== DEEPLY_EQUAL) {\n          this.updateFromDelta(story, delta);\n        }\n      }\n    }\n  }, {\n    key: \"updateFromDelta\",\n    value: function updateFromDelta(story, delta) {\n      // Use the argType to ensure we setting a type with defined options to something outside of that\n      var validatedDelta = validateOptions(delta, story.argTypes); // NOTE: we use `combineArgs` here rather than `combineParameters` because changes to arg\n      // array values are persisted in the URL as sparse arrays, and we have to take that into\n      // account when overriding the initialArgs (e.g. we patch [,'changed'] over ['initial', 'val'])\n\n      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);\n    }\n  }, {\n    key: \"updateFromPersisted\",\n    value: function updateFromPersisted(story, persisted) {\n      // Use the argType to ensure we aren't persisting the wrong type of value to the type.\n      // For instance you could try and set a string-valued arg to a number by changing the URL\n      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);\n      return this.updateFromDelta(story, mappedPersisted);\n    }\n  }, {\n    key: \"update\",\n    value: function update(storyId, argsUpdate) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n\n      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));\n    }\n  }]);\n\n  return ArgsStore;\n}();","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","combineArgs","mapArgsToTypes","validateOptions","deepDiff","DEEPLY_EQUAL","deleteUndefined","obj","keys","forEach","undefined","ArgsStore","initialArgsByStoryId","argsByStoryId","value","get","storyId","Error","concat","setInitial","story","id","initialArgs","delta","updateFromDelta","validatedDelta","argTypes","updateFromPersisted","persisted","mappedPersisted","update","argsUpdate","assign"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/store/dist/esm/ArgsStore.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { combineArgs, mapArgsToTypes, validateOptions, deepDiff, DEEPLY_EQUAL } from './args';\n\nfunction deleteUndefined(obj) {\n  // eslint-disable-next-line no-param-reassign\n  Object.keys(obj).forEach(function (key) {\n    return obj[key] === undefined && delete obj[key];\n  });\n  return obj;\n}\n\nexport var ArgsStore = /*#__PURE__*/function () {\n  function ArgsStore() {\n    _classCallCheck(this, ArgsStore);\n\n    this.initialArgsByStoryId = {};\n    this.argsByStoryId = {};\n  }\n\n  _createClass(ArgsStore, [{\n    key: \"get\",\n    value: function get(storyId) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n\n      return this.argsByStoryId[storyId];\n    }\n  }, {\n    key: \"setInitial\",\n    value: function setInitial(story) {\n      if (!this.initialArgsByStoryId[story.id]) {\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {\n        // When we get a new version of a story (with new initialArgs), we re-apply the same diff\n        // that we had previously applied to the old version of the story\n        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n\n        if (delta !== DEEPLY_EQUAL) {\n          this.updateFromDelta(story, delta);\n        }\n      }\n    }\n  }, {\n    key: \"updateFromDelta\",\n    value: function updateFromDelta(story, delta) {\n      // Use the argType to ensure we setting a type with defined options to something outside of that\n      var validatedDelta = validateOptions(delta, story.argTypes); // NOTE: we use `combineArgs` here rather than `combineParameters` because changes to arg\n      // array values are persisted in the URL as sparse arrays, and we have to take that into\n      // account when overriding the initialArgs (e.g. we patch [,'changed'] over ['initial', 'val'])\n\n      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);\n    }\n  }, {\n    key: \"updateFromPersisted\",\n    value: function updateFromPersisted(story, persisted) {\n      // Use the argType to ensure we aren't persisting the wrong type of value to the type.\n      // For instance you could try and set a string-valued arg to a number by changing the URL\n      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);\n      return this.updateFromDelta(story, mappedPersisted);\n    }\n  }, {\n    key: \"update\",\n    value: function update(storyId, argsUpdate) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n\n      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));\n    }\n  }]);\n\n  return ArgsStore;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}