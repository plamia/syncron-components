{"ast":null,"code":"import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n\n  if (isFunction(resultSelector)) {\n    return mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n} //# sourceMappingURL=mergeMapTo.js.map","map":{"version":3,"names":["mergeMap","isFunction","mergeMapTo","innerObservable","resultSelector","concurrent","Infinity"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js"],"sourcesContent":["import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAO,SAASC,UAAT,CAAoBC,eAApB,EAAqCC,cAArC,EAAqDC,UAArD,EAAiE;EACpE,IAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;IAAEA,UAAU,GAAGC,QAAb;EAAwB;;EACrD,IAAIL,UAAU,CAACG,cAAD,CAAd,EAAgC;IAC5B,OAAOJ,QAAQ,CAAC,YAAY;MAAE,OAAOG,eAAP;IAAyB,CAAxC,EAA0CC,cAA1C,EAA0DC,UAA1D,CAAf;EACH;;EACD,IAAI,OAAOD,cAAP,KAA0B,QAA9B,EAAwC;IACpCC,UAAU,GAAGD,cAAb;EACH;;EACD,OAAOJ,QAAQ,CAAC,YAAY;IAAE,OAAOG,eAAP;EAAyB,CAAxC,EAA0CE,UAA1C,CAAf;AACH,C,CACD"},"metadata":{},"sourceType":"module"}