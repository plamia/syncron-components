{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('call-bind/callBound');\n\nvar isLeadingSurrogate = require('../helpers/isLeadingSurrogate');\n\nvar isTrailingSurrogate = require('../helpers/isTrailingSurrogate');\n\nvar Type = require('./Type');\n\nvar UTF16SurrogatePairToCodePoint = require('./UTF16SurrogatePairToCodePoint');\n\nvar $charAt = callBound('String.prototype.charAt');\nvar $charCodeAt = callBound('String.prototype.charCodeAt'); // https://ecma-international.org/ecma-262/12.0/#sec-codepointat\n\nmodule.exports = function CodePointAt(string, position) {\n  if (Type(string) !== 'String') {\n    throw new $TypeError('Assertion failed: `string` must be a String');\n  }\n\n  var size = string.length;\n\n  if (position < 0 || position >= size) {\n    throw new $TypeError('Assertion failed: `position` must be >= 0, and < the length of `string`');\n  }\n\n  var first = $charCodeAt(string, position);\n  var cp = $charAt(string, position);\n  var firstIsLeading = isLeadingSurrogate(first);\n  var firstIsTrailing = isTrailingSurrogate(first);\n\n  if (!firstIsLeading && !firstIsTrailing) {\n    return {\n      '[[CodePoint]]': cp,\n      '[[CodeUnitCount]]': 1,\n      '[[IsUnpairedSurrogate]]': false\n    };\n  }\n\n  if (firstIsTrailing || position + 1 === size) {\n    return {\n      '[[CodePoint]]': cp,\n      '[[CodeUnitCount]]': 1,\n      '[[IsUnpairedSurrogate]]': true\n    };\n  }\n\n  var second = $charCodeAt(string, position + 1);\n\n  if (!isTrailingSurrogate(second)) {\n    return {\n      '[[CodePoint]]': cp,\n      '[[CodeUnitCount]]': 1,\n      '[[IsUnpairedSurrogate]]': true\n    };\n  }\n\n  return {\n    '[[CodePoint]]': UTF16SurrogatePairToCodePoint(first, second),\n    '[[CodeUnitCount]]': 2,\n    '[[IsUnpairedSurrogate]]': false\n  };\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","callBound","isLeadingSurrogate","isTrailingSurrogate","Type","UTF16SurrogatePairToCodePoint","$charAt","$charCodeAt","module","exports","CodePointAt","string","position","size","length","first","cp","firstIsLeading","firstIsTrailing","second"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/es-abstract/2021/CodePointAt.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar callBound = require('call-bind/callBound');\nvar isLeadingSurrogate = require('../helpers/isLeadingSurrogate');\nvar isTrailingSurrogate = require('../helpers/isTrailingSurrogate');\n\nvar Type = require('./Type');\nvar UTF16SurrogatePairToCodePoint = require('./UTF16SurrogatePairToCodePoint');\n\nvar $charAt = callBound('String.prototype.charAt');\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\n\n// https://ecma-international.org/ecma-262/12.0/#sec-codepointat\n\nmodule.exports = function CodePointAt(string, position) {\n\tif (Type(string) !== 'String') {\n\t\tthrow new $TypeError('Assertion failed: `string` must be a String');\n\t}\n\tvar size = string.length;\n\tif (position < 0 || position >= size) {\n\t\tthrow new $TypeError('Assertion failed: `position` must be >= 0, and < the length of `string`');\n\t}\n\tvar first = $charCodeAt(string, position);\n\tvar cp = $charAt(string, position);\n\tvar firstIsLeading = isLeadingSurrogate(first);\n\tvar firstIsTrailing = isTrailingSurrogate(first);\n\tif (!firstIsLeading && !firstIsTrailing) {\n\t\treturn {\n\t\t\t'[[CodePoint]]': cp,\n\t\t\t'[[CodeUnitCount]]': 1,\n\t\t\t'[[IsUnpairedSurrogate]]': false\n\t\t};\n\t}\n\tif (firstIsTrailing || (position + 1 === size)) {\n\t\treturn {\n\t\t\t'[[CodePoint]]': cp,\n\t\t\t'[[CodeUnitCount]]': 1,\n\t\t\t'[[IsUnpairedSurrogate]]': true\n\t\t};\n\t}\n\tvar second = $charCodeAt(string, position + 1);\n\tif (!isTrailingSurrogate(second)) {\n\t\treturn {\n\t\t\t'[[CodePoint]]': cp,\n\t\t\t'[[CodeUnitCount]]': 1,\n\t\t\t'[[IsUnpairedSurrogate]]': true\n\t\t};\n\t}\n\n\treturn {\n\t\t'[[CodePoint]]': UTF16SurrogatePairToCodePoint(first, second),\n\t\t'[[CodeUnitCount]]': 2,\n\t\t'[[IsUnpairedSurrogate]]': false\n\t};\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AACA,IAAIG,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,+BAAD,CAAhC;;AACA,IAAII,mBAAmB,GAAGJ,OAAO,CAAC,gCAAD,CAAjC;;AAEA,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIM,6BAA6B,GAAGN,OAAO,CAAC,iCAAD,CAA3C;;AAEA,IAAIO,OAAO,GAAGL,SAAS,CAAC,yBAAD,CAAvB;AACA,IAAIM,WAAW,GAAGN,SAAS,CAAC,6BAAD,CAA3B,C,CAEA;;AAEAO,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;EACvD,IAAIR,IAAI,CAACO,MAAD,CAAJ,KAAiB,QAArB,EAA+B;IAC9B,MAAM,IAAIX,UAAJ,CAAe,6CAAf,CAAN;EACA;;EACD,IAAIa,IAAI,GAAGF,MAAM,CAACG,MAAlB;;EACA,IAAIF,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIC,IAAhC,EAAsC;IACrC,MAAM,IAAIb,UAAJ,CAAe,yEAAf,CAAN;EACA;;EACD,IAAIe,KAAK,GAAGR,WAAW,CAACI,MAAD,EAASC,QAAT,CAAvB;EACA,IAAII,EAAE,GAAGV,OAAO,CAACK,MAAD,EAASC,QAAT,CAAhB;EACA,IAAIK,cAAc,GAAGf,kBAAkB,CAACa,KAAD,CAAvC;EACA,IAAIG,eAAe,GAAGf,mBAAmB,CAACY,KAAD,CAAzC;;EACA,IAAI,CAACE,cAAD,IAAmB,CAACC,eAAxB,EAAyC;IACxC,OAAO;MACN,iBAAiBF,EADX;MAEN,qBAAqB,CAFf;MAGN,2BAA2B;IAHrB,CAAP;EAKA;;EACD,IAAIE,eAAe,IAAKN,QAAQ,GAAG,CAAX,KAAiBC,IAAzC,EAAgD;IAC/C,OAAO;MACN,iBAAiBG,EADX;MAEN,qBAAqB,CAFf;MAGN,2BAA2B;IAHrB,CAAP;EAKA;;EACD,IAAIG,MAAM,GAAGZ,WAAW,CAACI,MAAD,EAASC,QAAQ,GAAG,CAApB,CAAxB;;EACA,IAAI,CAACT,mBAAmB,CAACgB,MAAD,CAAxB,EAAkC;IACjC,OAAO;MACN,iBAAiBH,EADX;MAEN,qBAAqB,CAFf;MAGN,2BAA2B;IAHrB,CAAP;EAKA;;EAED,OAAO;IACN,iBAAiBX,6BAA6B,CAACU,KAAD,EAAQI,MAAR,CADxC;IAEN,qBAAqB,CAFf;IAGN,2BAA2B;EAHrB,CAAP;AAKA,CAxCD"},"metadata":{},"sourceType":"script"}