{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { TypeSystem } from './types';\nimport { createSummaryValue } from '../utils';\nimport { createFlowPropDef } from './flow/createPropDef';\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\nimport { createTsPropDef } from './typeScript/createPropDef';\nimport { convert } from '../convert';\n\nfunction createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  return type != null ? createSummaryValue(type.name) : null;\n} // A heuristic to tell if a defaultValue comes from RDT\n\n\nfunction isReactDocgenTypescript(defaultValue) {\n  var computed = defaultValue.computed,\n      func = defaultValue.func;\n  return typeof computed === 'undefined' && typeof func === 'undefined';\n}\n\nfunction isStringValued(type) {\n  if (!type) {\n    return false;\n  }\n\n  if (type.name === 'string') {\n    return true;\n  }\n\n  if (type.name === 'enum') {\n    return Array.isArray(type.value) && type.value.every(function (_ref) {\n      var tv = _ref.value;\n      return typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"';\n    });\n  }\n\n  return false;\n}\n\nfunction createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\n      // default, instead of \"'string'\" -- which is incorrect\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\n        return createSummaryValue(JSON.stringify(value));\n      }\n\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}\n\nfunction createBasicPropDef(name, type, docgenInfo) {\n  var description = docgenInfo.description,\n      required = docgenInfo.required,\n      defaultValue = docgenInfo.defaultValue;\n  return {\n    name: name,\n    type: createType(type),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(defaultValue, type)\n  };\n}\n\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\n  if (jsDocParsingResult.includesJsDoc) {\n    var description = jsDocParsingResult.description,\n        extractedTags = jsDocParsingResult.extractedTags;\n\n    if (description != null) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.description = jsDocParsingResult.description;\n    }\n\n    var hasParams = extractedTags.params != null;\n    var hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\n\n    if (hasParams || hasReturns) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.jsDocTags = {\n        params: hasParams && extractedTags.params.map(function (x) {\n          return {\n            name: x.getPrettyName(),\n            description: x.description\n          };\n        }),\n        returns: hasReturns && {\n          description: extractedTags.returns.description\n        }\n      };\n    }\n  }\n\n  return propDef;\n}\n\nexport var javaScriptFactory = function javaScriptFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var tsFactory = function tsFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createTsPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var flowFactory = function flowFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createFlowPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var unknownFactory = function unknownFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, {\n    name: 'unknown'\n  }, docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var getPropDefFactory = function getPropDefFactory(typeSystem) {\n  switch (typeSystem) {\n    case TypeSystem.JAVASCRIPT:\n      return javaScriptFactory;\n\n    case TypeSystem.TYPESCRIPT:\n      return tsFactory;\n\n    case TypeSystem.FLOW:\n      return flowFactory;\n\n    default:\n      return unknownFactory;\n  }\n};","map":{"version":3,"names":["TypeSystem","createSummaryValue","createFlowPropDef","isDefaultValueBlacklisted","createTsPropDef","convert","createType","type","name","isReactDocgenTypescript","defaultValue","computed","func","isStringValued","Array","isArray","value","every","_ref","tv","length","createDefaultValue","JSON","stringify","createBasicPropDef","docgenInfo","description","required","applyJsDocResult","propDef","jsDocParsingResult","includesJsDoc","extractedTags","hasParams","params","hasReturns","returns","jsDocTags","map","x","getPrettyName","javaScriptFactory","propName","sbType","tsFactory","flowFactory","unknownFactory","getPropDefFactory","typeSystem","JAVASCRIPT","TYPESCRIPT","FLOW"],"sources":["/Users/plamenakichukova/syncron-sdk-components/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/createPropDef.js"],"sourcesContent":["import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { TypeSystem } from './types';\nimport { createSummaryValue } from '../utils';\nimport { createFlowPropDef } from './flow/createPropDef';\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\nimport { createTsPropDef } from './typeScript/createPropDef';\nimport { convert } from '../convert';\n\nfunction createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  return type != null ? createSummaryValue(type.name) : null;\n} // A heuristic to tell if a defaultValue comes from RDT\n\n\nfunction isReactDocgenTypescript(defaultValue) {\n  var computed = defaultValue.computed,\n      func = defaultValue.func;\n  return typeof computed === 'undefined' && typeof func === 'undefined';\n}\n\nfunction isStringValued(type) {\n  if (!type) {\n    return false;\n  }\n\n  if (type.name === 'string') {\n    return true;\n  }\n\n  if (type.name === 'enum') {\n    return Array.isArray(type.value) && type.value.every(function (_ref) {\n      var tv = _ref.value;\n      return typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"';\n    });\n  }\n\n  return false;\n}\n\nfunction createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\n      // default, instead of \"'string'\" -- which is incorrect\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\n        return createSummaryValue(JSON.stringify(value));\n      }\n\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}\n\nfunction createBasicPropDef(name, type, docgenInfo) {\n  var description = docgenInfo.description,\n      required = docgenInfo.required,\n      defaultValue = docgenInfo.defaultValue;\n  return {\n    name: name,\n    type: createType(type),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(defaultValue, type)\n  };\n}\n\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\n  if (jsDocParsingResult.includesJsDoc) {\n    var description = jsDocParsingResult.description,\n        extractedTags = jsDocParsingResult.extractedTags;\n\n    if (description != null) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.description = jsDocParsingResult.description;\n    }\n\n    var hasParams = extractedTags.params != null;\n    var hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\n\n    if (hasParams || hasReturns) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.jsDocTags = {\n        params: hasParams && extractedTags.params.map(function (x) {\n          return {\n            name: x.getPrettyName(),\n            description: x.description\n          };\n        }),\n        returns: hasReturns && {\n          description: extractedTags.returns.description\n        }\n      };\n    }\n  }\n\n  return propDef;\n}\n\nexport var javaScriptFactory = function javaScriptFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var tsFactory = function tsFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createTsPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var flowFactory = function flowFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createFlowPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var unknownFactory = function unknownFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, {\n    name: 'unknown'\n  }, docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var getPropDefFactory = function getPropDefFactory(typeSystem) {\n  switch (typeSystem) {\n    case TypeSystem.JAVASCRIPT:\n      return javaScriptFactory;\n\n    case TypeSystem.TYPESCRIPT:\n      return tsFactory;\n\n    case TypeSystem.FLOW:\n      return flowFactory;\n\n    default:\n      return unknownFactory;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}